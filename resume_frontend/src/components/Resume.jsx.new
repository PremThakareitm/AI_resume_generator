import React, { useRef } from "react";
import "daisyui/dist/full.css";
import { toPng } from "html-to-image";
import { jsPDF } from "jspdf";
import { useReactToPrint } from "react-to-print";

const Resume = ({ data }) => {
  const resumeRef = useRef(null);

  // Helper function to safely access data regardless of structure
  const resumeData = data?.data || data || {};

  // Helper to safely get personal information
  const getPersonalInfo = (field, defaultValue = "") => {
    return resumeData?.personalInformation?.[field] || defaultValue;
  };

  // Helper to safely get skills
  const getSkills = () => {
    return resumeData?.skills || [];
  };

  // Helper to safely get experiences
  const getExperiences = () => {
    return resumeData?.experience || [];
  };

  // Helper to safely get education
  const getEducation = () => {
    return resumeData?.education || [];
  };

  // Helper to safely get certifications
  const getCertifications = () => {
    return resumeData?.certifications || [];
  };

  // Helper to safely get achievements
  const getAchievements = () => {
    return resumeData?.achievements || [];
  };

  const handleDownloadPdf = () => {
    const resumeData = data?.data || data;
    const fullName = resumeData?.personalInformation?.fullName || "Resume";

    toPng(resumeRef.current, { quality: 1.0 })
      .then((dataUrl) => {
        const pdf = new jsPDF("p", "mm", "a4");
        pdf.addImage(dataUrl, "PNG", 10, 10, 190, 0);
        pdf.save(`${fullName}.pdf`);
      })
      .catch((err) => {
        console.error("Error generating PDF", err);
      });
  };

  const handlePrint = useReactToPrint({
    content: () => resumeRef.current,
    documentTitle: `${getPersonalInfo("fullName", "Resume")}_Resume`,
  });

  return (
    <>
      <div
        ref={resumeRef}
        className="max-w-4xl mx-auto p-8 bg-white text-black border border-gray-200"
        style={{fontFamily: 'Arial, sans-serif', lineHeight: '1.4'}}
      >
        {/* Header Section - Minimalist Design Like the Image */}
        <div className="mb-6">
          <h1 className="text-2xl font-bold text-center">
            {getPersonalInfo("fullName", "Your Name")} <span className="font-normal">[Professional]</span>
          </h1>
          
          <div className="flex justify-center text-sm mt-1">
            <span>{getPersonalInfo("location", "Los Angeles, CA")}</span>
            {getPersonalInfo("linkedIn") && (
              <> | <a href={getPersonalInfo("linkedIn")} className="text-blue-600 hover:underline">LinkedIn</a></>
            )}
            {getPersonalInfo("phoneNumber") && (
              <> | <span>{getPersonalInfo("phoneNumber")}</span></>
            )}
            {getPersonalInfo("email") && (
              <> | <a href={`mailto:${getPersonalInfo("email")}`} className="text-blue-600 hover:underline">{getPersonalInfo("email")}</a></>
            )}
          </div>
        </div>

        {/* WORK EXPERIENCE - Bold uppercase header like in image */}
        <div className="mb-4">
          <h2 className="text-base font-bold uppercase mb-1">Work Experience</h2>
          
          {getExperiences().length > 0 ? (
            getExperiences().map((exp, index) => (
              <div key={index} className="mb-4">
                <div className="grid grid-cols-4">
                  <div className="col-span-2">
                    <div className="font-bold">{exp.company}</div>
                    <div className="italic">{exp.jobTitle}</div>
                  </div>
                  <div className="col-span-2 text-right">
                    <div>{exp.location}</div>
                    <div className="italic">{exp.duration}</div>
                  </div>
                </div>
                <ul className="list-disc ml-5 mt-1">
                  <li className="text-sm">{exp.responsibility}</li>
                </ul>
              </div>
            ))
          ) : (
            <p className="text-sm text-gray-500">Work experience will appear here based on the job description.</p>
          )}
        </div>

        {/* LEADERSHIP EXPERIENCE (if available) */}
        {getAchievements().length > 0 && (
          <div className="mb-4">
            <h2 className="text-base font-bold uppercase mb-1">Leadership Experience</h2>
            {getAchievements().map((ach, index) => (
              <div key={index} className="mb-4">
                <div className="grid grid-cols-4">
                  <div className="col-span-2">
                    <div className="font-bold">{ach.title}</div>
                    <div className="italic">Professional Development</div>
                  </div>
                  <div className="col-span-2 text-right">
                    <div>Location</div>
                    <div className="italic">{ach.year}</div>
                  </div>
                </div>
                <ul className="list-disc ml-5 mt-1">
                  <li className="text-sm">{ach.extraInformation}</li>
                </ul>
              </div>
            ))}
          </div>
        )}

        {/* EDUCATION */}
        <div className="mb-4">
          <h2 className="text-base font-bold uppercase mb-1">Education</h2>
          
          {getEducation().length > 0 ? (
            getEducation().map((edu, index) => (
              <div key={index} className="mb-2">
                <div className="grid grid-cols-4">
                  <div className="col-span-2">
                    <div className="font-bold">{edu.university}</div>
                    <div className="italic">{edu.degree}</div>
                  </div>
                  <div className="col-span-2 text-right">
                    <div>{edu.location}</div>
                    <div>Graduation Date: {edu.graduationYear}</div>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <p className="text-sm text-gray-500">Education details will appear here.</p>
          )}
        </div>

        {/* SKILLS & INTERESTS */}
        <div className="mb-4">
          <h2 className="text-base font-bold uppercase mb-1">Skills & Interests</h2>
          
          <div>
            <span className="font-bold">Skills:</span> {' '}
            {getSkills().length > 0 
              ? getSkills().map(skill => skill.title).join(' | ') 
              : "Relevant skills will appear here."}
          </div>
        </div>

        {/* Certifications - Optional */}
        {getCertifications().length > 0 && (
          <div className="mb-4">
            <h2 className="text-base font-bold uppercase mb-1">Certifications</h2>
            <ul className="list-disc ml-5">
              {getCertifications().map((cert, index) => (
                <li key={index} className="text-sm">
                  <span className="font-medium">{cert.title}</span> - {cert.issuingOrganization}, {cert.year}
                </li>
              ))}
            </ul>
          </div>
        )}
      </div>

      <section className="flex justify-center mt-4 gap-4">
        <button onClick={handleDownloadPdf} className="btn btn-primary">
          Download PDF
        </button>
        <button
          onClick={handlePrint}
          className="btn btn-secondary"
        >
          Print Resume
        </button>
      </section>
    </>
  );
};

export default Resume;
